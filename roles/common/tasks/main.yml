- name: "Setup configuration directories"
  file:
    dest: "{{ lookup('env','HOME') }}/{{ item }}"
    state: directory
  with_items:
    - .config
    - .config/autostart
    - .config/Code/User
    - .config/systemd/user
    - .ssh
    - .local/bin
    - .virtualenvs
    - .gnupg
    - .FreeCAD
- name: "Install dotfiles"
  file:
    src: "{{ playbook_dir }}/dotfiles/{{ item.src }}"
    dest: "{{ lookup('env','HOME') }}/{{ item.dest }}"
    state: link
    force: yes
  with_items:
    - src: gitconfig
      dest: .gitconfig
    - src: gitignore
      dest: .gitignore
    - src: fdignore
      dest: .fdignore
    - src: config/nvim
      dest: .config/nvim
    - src: config/Code/User/keybindings.json
      dest: .config/Code/User/keybindings.json
    - src: config/autostart/gnome-keyring-ssh.desktop
      dest: .config/autostart/gnome-keyring-ssh.desktop
    - src: gnupg/gpg.conf
      dest: .gnupg/gpg.conf
    - src: gnupg/gpg-agent.conf
      dest: .gnupg/gpg-agent.conf
    - src: bashrc
      dest: .bashrc
    - src: inputrc
      dest: .inputrc
    - src: profile
      dest: .profile
    - src: tmux.conf
      dest: .tmux.conf
    - src: Xresources
      dest: .Xresources
    - src: FreeCAD/Macro
      dest: .FreeCAD/Macro
- name: "Install local scripts"
  file:
    src: "{{ item }}"
    dest: "{{ lookup('env','HOME') }}/.local/bin/{{ item | basename }}"
    state: link
    force: yes
  with_fileglob:
    - "{{ playbook_dir }}/bin/*"
- name: ssh-config
  template:
    src: templates/ssh-config
    dest: "{{ lookup('env','HOME') }}/.ssh/config"
- name: Install apt transport https
  become: yes
  apt:
    name: apt-transport-https
- name: Prepare gh repo key
  become: yes
  apt_key:
    keyserver: keyserver.ubuntu.com
    id: C99B11DEB97541F0
- name: Add gh repo
  become: yes
  apt_repository:
    repo: "deb https://cli.github.com/packages stable main"
    filename: gh
- name: Update apt packages
  become: yes
  apt:
    upgrade: dist
    update_cache: yes
- name: Install apt packages
  become: yes
  apt:
    name: "{{ packages }}"
  vars:
    packages:
    - bison
    - build-essential
    - cowsay
    - curl
    - fd-find
    - flex
    - fzf
    - gdb-multiarch
    - gh
    - git
    - gnupg2
    - htop
    - libssl-dev
    - neovim
    - openssh-server
    - pcscd
    - pkg-config
    - python3-pip
    - python3-venv
    - ripgrep
    - ruby
    - ruby-bundler
    - ruby-dev
    - scdaemon
    - shellcheck
    - sl
    - sshpass
    - tmux
    - tree
    - xclip
- name: Remove apt packages
  become: yes
  apt:
    name: "{{ packages }}"
    state: absent
  vars:
    packages:
    - elixir
    - evolution
    - krita
    - thunderbird
- name: Install python packages
  pip:
    name: "{{ packages }}"
    executable: pip3
    extra_args: --user
    state: latest
  vars:
    packages:
      - black
      - neovim
      - poetry
      - pre-commit
      - pycodestyle
      - pylama
      - pylint
      - virtualenv
- name: Setup neovim virtualenv Python 3
  pip:
    name: pynvim
    virtualenv: "{{ lookup('env', 'HOME') }}/.virtualenvs/neovim-py3"
    virtualenv_python: python3
- name: Add jedi to neovim virtualenv
  pip:
    name: jedi
    virtualenv: "{{ lookup('env', 'HOME') }}/.virtualenvs/neovim-py3"
- name: Download insect
  get_url:
    url: https://github.com/sharkdp/insect/releases/download/v5.3.0/insect-linux-x64
    dest: "{{ lookup('env','HOME') }}/.local/bin/insect"
- name: Chmod insect
  file:
    path: "{{ lookup('env','HOME') }}/.local/bin/insect"
    mode: a+x
