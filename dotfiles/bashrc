# If not running interactively, don't do anything
case $- in
    *i*) ;;
      *) return;;
esac

HISTCONTROL=ignoreboth
shopt -s histappend
HISTSIZE=5000000
HISTFILESIZE=5000000

shopt -s checkwinsize
shopt -s globstar

# TODO: What does this really do?
# make less more friendly for non-text input files, see lesspipe(1)
[ -x /usr/bin/lesspipe ] && eval "$(SHELL=/bin/sh lesspipe)"

PS1='\[\033[01;32m\]\h\[\033[00m\] \[\033[01;34m\]\w\[\033[00m\] \$ '

if [ -x /usr/bin/dircolors ]; then
    test -r ~/.dircolors && eval "$(dircolors -b ~/.dircolors)" || eval "$(dircolors -b)"
    alias ls='ls --color=auto'
    alias grep='grep --color=auto'
    alias fgrep='fgrep --color=auto'
    alias egrep='egrep --color=auto'
fi

# enable programmable completion features (you don't need to enable
# this, if it's already enabled in /etc/bash.bashrc and /etc/profile
# sources /etc/bash.bashrc).
if ! shopt -oq posix; then
  if [ -f /usr/share/bash-completion/bash_completion ]; then
    . /usr/share/bash-completion/bash_completion
  elif [ -f /etc/bash_completion ]; then
    . /etc/bash_completion
  fi
fi

[ -f $HOME/.bash_secrets ] && . "$HOME/.bash_secrets"
[ -f $HOME/.bash_local ] && . "$HOME/.bash_local"

if ! [ -n "$PROJECTS_HOME" ]
then
    export PROJECTS_HOME="$HOME/repo"
fi

function fclone() {
    hub clone "$1"
    cd "$(basename $1)"
    git remote rename origin upstream
    hub fork --remote-name origin
}

PROMPT_COMMAND="porg_venv_activate"
porg_venv_activate() {
    if [ -e .porg/venvs ] && [ -e .porg/venvs/porg-i ]
    then
        if ! [ "$PORG_ACTIVATED" = 1 ]
        then
            VENV=$(ls .porg/venvs | grep -v porg-i | sort | tail -n 1)
            echo "Activating porg venv $VENV"
            . ".porg/venvs/$VENV/bin/activate"
            export PORG_ACTIVATED=1
        fi
    else
        if [ "$PORG_ACTIVATED" = 1 ] && type deactivate >/dev/null
        then
            echo "Deactivating porg venv"
            deactivate
        fi
        export PORG_ACTIVATED=0
    fi
}

if grep -i microsoft /proc/version >/dev/null
then
    export DISPLAY=$(cat /etc/resolv.conf | grep nameserver | awk '{print $2}'):0
fi

function prj() {
    RESULT=$(find "$PROJECTS_HOME/" -maxdepth 3 -name '.git' -type d -printf '%h\n' | sed "s#$PROJECTS_HOME/##g" | fzf)
    cd "$PROJECTS_HOME/$RESULT"
}

function vrg() {
    nvim -c ":Rg $1"
}

alias nf='nvim $(fzf)'

alias forgetful_ssh='ssh -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null'
alias forgetful_scp='scp -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null'

export GPG_TTY="$(tty)"
export GH_HOST=github.adtran.com
if command -v gh
then
    eval "$(gh completion -s bash)"
fi
# BEGIN ANSIBLE MANAGED BLOCK ta5k
export GHS_LMWHICH="@ghs"
export GHS_LMHOST="@corp-licmgr.adtran.com"
# END ANSIBLE MANAGED BLOCK ta5k
export ARTIFACTORY_SERVER=https://artifactory.adtran.com
export DOCKERBINARY=/opt/lsk-docker/docker

if [ -e "$HOME/.nvm/nvm.sh" ]
then
    . "$HOME/.nvm/nvm.sh"
fi

# BEGIN ANSIBLE MANAGED BLOCK
if [[ ! $PATH =~ $HOME/.local/bin && -d $HOME/.local/bin ]]
then
    PATH="$HOME/.local/bin:$PATH"
fi
# END ANSIBLE MANAGED BLOCK
