- hosts: all
  connection: local
  tasks:
    - name: Setup directories
      file:
        dest: "{{ lookup('env','HOME') }}/{{ item }}"
        state: directory
      with_items:
        - .config
        - .ssh
    - name: Setup dotfiles
      file:
        src: "{{ playbook_dir }}/dotfiles/{{ item.src }}"
        dest: "{{ lookup('env','HOME') }}/{{ item.dest }}"
        state: link
        force: yes
      with_items:
        - src: gitconfig
          dest: .gitconfig
        - src: config/nvim
          dest: .config/nvim
        - src: bashrc
          dest: .bashrc
        - src: inputrc
          dest: .inputrc
        - src: profile
          dest: .profile
        - src: tmux.conf
          dest: .tmux.conf
        - src: Xresources
          dest: .Xresources
    - name: ssh-config
      template:
        src: templates/ssh-config
        dest: "{{ lookup('env','HOME') }}/.ssh/config"
      vars:
        testbeds:
          - alpha
          - bravo
          - charlie
          - delta
          - dpoe-lite5
          - dpoe-lite6
          - dpoe-lite7
          - dpoe-lite8
          - dpoe-lite9
          - dpoe-lite10
          - dpoe-lite11
          - dpoe-lite12
          - dpoe1
          - dpoe2
          - dpoe3
          - dpoe-scale1
          - dpoe-fbw1
    - name: Install apt transport https
      become: yes
      apt:
        name: apt-transport-https
    - name: Add chrome key
      become: yes
      apt_key:
        id: 6494C6D6997C215E
        keyserver: keyserver.ubuntu.com
    - name: Add chrome repo
      become: yes
      apt_repository:
        repo: "deb [arch=amd64] http://dl.google.com/linux/chrome/deb/ stable main"
        filename: google-chrome
    - name: Add MS key
      become: yes
      apt_key:
        url: https://packages.microsoft.com/keys/microsoft.asc
    - name: Add VS Code repo
      become: yes
      apt_repository:
        repo: "deb [arch=amd64] http://packages.microsoft.com/repos/vscode stable main"
        filename: vscode
    - name: Prepare docker repo key
      become: yes
      apt_key:
        url: https://download.docker.com/linux/ubuntu/gpg
        id: 9DC858229FC7DD38854AE2D88D81803C0EBFCD88
    - name: Prepare docker repo
      become: yes
      apt_repository:
        repo: "deb [arch=amd64] https://download.docker.com/linux/ubuntu {{ ansible_distribution_release|lower }} stable"
        filename: docker-ce
    - name: Add ownCloud key
      become: yes
      apt_key:
        url: https://download.opensuse.org/repositories/isv:ownCloud:desktop/Ubuntu_18.04/Release.key
    - name: Add ownCloud repo
      become: yes
      apt_repository:
        repo: "deb http://download.opensuse.org/repositories/isv:/ownCloud:/desktop/Ubuntu_18.04/ /"
        filename: owncloud
    - name: Add neovim PPA
      become: yes
      apt_repository:
        repo: ppa:neovim-ppa/stable
    - name: Add SBT key
      become: yes
      apt_key:
        keyserver: keyserver.ubuntu.com
        id: 2EE0EA64E40A89B84B2DF73499E82A75642AC823
    - name: Add SBT repo
      become: yes
      apt_repository:
        repo: "deb https://dl.bintray.com/sbt/debian /"
        state: present
    - name: Add universe repo
      become: yes
      apt_repository:
        repo: "deb http://us.archive.ubuntu.com/ubuntu {{ ansible_distribution_release|lower }} universe"
        state: present
    - name: Update apt packages
      become: yes
      apt:
        upgrade: dist
        update_cache: yes
    - name: Install apt packages 
      become: yes
      apt:
        name: "{{ packages }}"
      vars:
        packages:
        - build-essential
        - code
        - cowsay
        - curl
        - default-jdk
        - docker-ce
        - gdb
        - git
        - google-chrome-stable
        - htop
        - keepass2
        - libssl1.0-dev
        - meld
        - mgba-qt
        - neovim
        - owncloud-client
        - pkg-config
        - python3-pip
        - ruby
        - ruby-dev
        - rxvt
        - sbt
        - shellcheck
        - tmux
        - verilator
        - virtualenvwrapper
        - xclip
    - name: Add user to docker group
      become: yes
      user:
        name: "{{ lookup('env', 'USER') }}"
        groups: docker
        append: yes
    - name: Install python packages
      pip:
        name: "{{ packages }}"
        executable: pip3
        extra_args: --user
        state: latest
      vars:
        packages:
          - black
          - neovim
          - pycodestyle
          - pylama
          - pylint
          - python-language-server
          - virtualenv
    - name: Install neovim ruby extension
      gem:
        name: neovim
        state: latest
    - name: Install rust
      shell: "curl https://sh.rustup.rs -sSf | sh -s -- -y --no-modify-path && rustup component add rls rust-src"
      args:
        creates: "{{ lookup('env', 'HOME') }}/.cargo/bin/rustc"
    - name: Update rust
      shell: "rustup update"
    - name: Install ripgrep
      command: cargo install ripgrep
      args:
        creates: "{{ lookup('env', 'HOME') }}/.cargo/bin/rg"
    - name: Install cargo-xbuild
      command: cargo install cargo-xbuild
      args:
        creates: "{{ lookup('env', 'HOME') }}/.cargo/bin/cargo-xbuild"
    - name: Install cargo-edit
      command: cargo install cargo-edit
      args:
        creates: "{{ lookup('env', 'HOME') }}/.cargo/bin/cargo-add"
    - name: Install devkitPro pacman
      become: yes
      apt:
        deb: https://github.com/devkitPro/pacman/releases/download/devkitpro-pacman-1.0.1/devkitpro-pacman.deb
    - name: Install devkitARM
      shell: "dkp-pacman -Sy --noconfirm gba-dev"
      args:
        creates: "/opt/devkitpro/libgba/lib/libgba.a"
    - name: Update devkitARM
      shell: "dkp-pacman -Syu --noconfirm"
